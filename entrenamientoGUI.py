#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
#
# generated by wxGlade on Wed Jul 19 16:06:23 2017
#

import wx
import gettext
import entrenamiento
import modelos
import os

#Clase generada en wxGlade para la creacion de la ventana
class Ventana(wx.Frame):
    #Creacion de componentes de la ventana
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        panelprincipal = wx.Panel(self)
        self.checkboxContinuarEnt = wx.CheckBox(panelprincipal, wx.ID_ANY, "Continuar entrenamiento")
        #self.intextRutaModelo = wx.TextCtrl(self, wx.ID_ANY, "Ruta del modelo")
        self.intextRutaModelo = wx.FilePickerCtrl(panelprincipal,message="Ruta del modelo guardado", style=wx.FLP_USE_TEXTCTRL)
        #self.intextRutaDatos = wx.TextCtrl(self, wx.ID_ANY, "Ruta de datos para entrenamiento")
        self.intextRutaDatos = wx.DirPickerCtrl(panelprincipal,message="Ruta de los datos para entrenamiento", style=wx.FLP_USE_TEXTCTRL)
        self.checkboxTensorboard = wx.CheckBox(panelprincipal, wx.ID_ANY, "Tensorboard")
        self.checkboxTensorboard.SetValue(True)
        self.checkboxCambiarPropiedades = wx.CheckBox(panelprincipal, wx.ID_ANY, "Cambiar propiedades")
        self.radioADAM = wx.RadioButton(panelprincipal, wx.ID_ANY, "ADAM")
        self.radioCGD = wx.RadioButton(panelprincipal, wx.ID_ANY, "CGD")
        self.checkboxLRP = wx.CheckBox(panelprincipal, wx.ID_ANY, "LR personalizado")
        self.intextLR = wx.TextCtrl(panelprincipal, wx.ID_ANY, "")
        self.buttonEntrenar = wx.Button(panelprincipal, wx.ID_ANY, "Entrenar")
        self.buttonCancelar = wx.Button(panelprincipal, wx.ID_ANY, "Cancelar")
        self.textConsola = wx.StaticText(panelprincipal, wx.ID_ANY, "")
        self.textRutaDatos = wx.StaticText(panelprincipal, wx.ID_ANY, "Carpeta de datos")
        self.__set_properties()
        self.__do_layout()

    #Configuracion de la ventana
    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle("Entrenamiento")
        self.SetSize((600, 500))
        # end wxGlade

    #Acomodo de los widgets
    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_7 = wx.BoxSizer(wx.VERTICAL)
        sizer_4 = wx.BoxSizer(wx.VERTICAL)
        sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_6 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_8 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_9 = wx.BoxSizer(wx.HORIZONTAL)
        #textConsola = wx.StaticText(self, wx.ID_ANY, "")
        sizer_1.Add(self.textConsola, 1, wx.EXPAND, 0)
        sizer_2.Add(self.checkboxContinuarEnt, 0, 0, 0)
        sizer_2.Add(self.intextRutaModelo, 1, 0, 0)
        sizer_1.Add(sizer_2, 0, wx.EXPAND, 0)
        sizer_1.Add(sizer_8, 0, wx.EXPAND, 0)
        sizer_8.Add(self.textRutaDatos, 0, 0, 0)
        sizer_8.Add(self.intextRutaDatos, 1, 0, 0)
        sizer_9.Add(self.checkboxTensorboard, 1, 0, 0)
        sizer_9.Add(self.checkboxCambiarPropiedades, 1, 0, 0)
        sizer_4.Add(sizer_9, 0, wx.EXPAND, 0)
        sizer_6.Add(self.radioADAM, 1, 0, 0)
        sizer_6.Add(self.radioCGD, 1, 0, 0)
        sizer_4.Add(sizer_6, 0, wx.EXPAND, 0)
        sizer_5.Add(self.checkboxLRP, 0, 0, 0)
        sizer_5.Add(self.intextLR, 1, wx.LEFT, 4)
        sizer_4.Add(sizer_5, 0, wx.EXPAND, 0)
        sizer_3.Add(sizer_4, 1, wx.EXPAND, 0)
        sizer_7.Add(self.buttonEntrenar, 1, 0, 0)
        sizer_7.Add(self.buttonCancelar, 0, 0, 0)
        sizer_3.Add(sizer_7, 0, wx.EXPAND, 0)
        sizer_1.Add(sizer_3, 0, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        self.SetSize((600, 500))
        self.checkboxCambiarPropiedades.Bind(wx.EVT_CHECKBOX, self.OnClickCheckBox)
        self.checkboxContinuarEnt.Bind(wx.EVT_CHECKBOX, self.OnClickCheckBox)
        self.checkboxLRP.Bind(wx.EVT_CHECKBOX, self.OnClickCheckBox)
        # end wxGlade

    #Funcion que lee los introducidos en los widgets
    def ObtenerValores(self):
        ruta_modelo = self.intextRutaModelo.GetPath()
        ruta_datos = self.intextRutaDatos.GetPath()
        tensorboard = self.checkboxTensorboard.GetValue()
        continuarentrenamiento=self.checkboxContinuarEnt.GetValue()
        lrperzonalizado = self.checkboxLRP.GetValue()
        optimizador = "adam" if self.radioADAM.GetValue() else "cgd"
        lr = self.intextLR.GetValue()
        cambiarpropiedades = self.checkboxCambiarPropiedades.GetValue()
        return (ruta_modelo, ruta_datos, tensorboard, continuarentrenamiento,
                lrperzonalizado, optimizador, lr, cambiarpropiedades)

    #Funcion que habilita o deshabilita los widgets dependiendo de las opciones seleccionadas
    def HabilitarWidgets(self):
        #self.buttonCancelar
        #self.buttonEntrenar
        #self.checkboxCambiarPropiedades
        #self.checkboxContinuarEnt
        self.checkboxLRP.Enable(self.checkboxCambiarPropiedades.GetValue())
        #self.checkboxTensorboard
        self.intextLR.Enable(self.checkboxLRP.GetValue() and self.checkboxCambiarPropiedades.GetValue())
        #self.intextRutaDatos.Enable()
        self.intextRutaModelo.Enable(self.checkboxContinuarEnt.GetValue())
        self.radioCGD.Enable(self.checkboxCambiarPropiedades.GetValue())
        self.radioADAM.Enable(self.checkboxCambiarPropiedades.GetValue())

    #Funcion callback relacionada a los checkbox de la ventana
    def OnClickCheckBox(self,evnt):
        self.HabilitarWidgets()

class App(wx.App):
    def OnInit(self):
        self.ventana = Ventana(None)
        self.ventana.HabilitarWidgets()
        self.ventana.Show()
        return True


#Funcion llamada por el boton "Entrenar"
def OnButtonEntrenar(evnt):
     entrenamiento.Entrenar(*app.ventana.ObtenerValores())


#Funcion llamada por el boton "Cancelar"
def OnButtonCancelar(evnt):
    pass

if __name__ == "__main__":
    app = App(redirect=True)
    app.ventana.buttonEntrenar.Bind(wx.EVT_BUTTON, OnButtonEntrenar)
    app.ventana.buttonCancelar.Bind(wx.EVT_BUTTON, OnButtonCancelar)
    app.MainLoop()
